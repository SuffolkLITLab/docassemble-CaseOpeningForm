---
include:
  - docassemble.AssemblyLine:al_package.yml
---
objects:
  - addendum: ALExhibitDocument.using(title="Exhibits", 
      filename="Exhibits", 
      enabled=True, 
      include_exhibit_cover_pages=False )
---
mandatory: True
code: | 
  exhibit_sort_and_combine
--- 
event: download_screen
question: |
  Your file is ready
subquestion: |  
  ${ al_user_bundle.download_list_html() }
---
comment: |
  AlExhibitDocument - containter for everything 
  ALExhibitList - container for all documents (each category has a list, make it more natural for gathering) 
  we will create our own AlExhibit list for each group of motions, orders, docket sheet, that is uploaded and mergeinto the ALExhibitDocument 
  ALExhibit - Document that gets a mention in the table of contents 
  - each page is its own object underneath it 
---
objects: 
  - conflicts: ALExhibitList 
---
code: | 
  addendum.exhibits.clear()
  addendum.exhibits.extend(conflicts) #combines things from List B into List A 
  addendum.exhibits.sort(key=lambda y: y.date) #organizes by .date
  addendum.exhibits._update_page_numbers()
  addendum.exhibits._update_labels()
  exhibit_sort_and_combine = True
---
id: motions 3
question: |
  You have ${ conflicts.number_gathered() } motion(s) so far. Do you have another motion you want to upload?
subquestion: |
  ${ collapse_template(conflicts.in_progress_exhibits) }
field: conflicts.there_is_another
buttons:
  - Finished adding documents: False
  - Add another document: True
---
id: motions 2
question: |
  Upload the ${ ordinal(i) } motion
subquestion: |
  You will have a chance to upload additional pages for this document later.  
fields:
  - Document title: conflicts[i].title
    maxlength: 60 # longer might break TOC
  - Document date: conflicts[i].date
    datatype: date
  - Upload the first exhibit: conflicts[i].pages
    datatype: files
    maximum image size: 1024
    image upload type: jpeg        
    accept: |
      "image/png, image/jpeg, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf,.pdf"   
validation code: |
  if sum(exhibit.size_in_bytes() for exhibit in conflicts[i].pages) > (15 * 1024 * 1024):
    validation_error("Upload a file smaller than 15 MB.")
  try:
    pdf_concatenate(conflicts[i].pages)
  except:
    validation_error("Unable to convert this file. Please upload a new one.", field="conflicts[i].pages")
  del conflicts[i].pages.gathered  # docassemble sets this attribute but we want to force gathering additional pages
---
id: motions 1
question: |
  Do you have any motions that you want to provide to the court?
fields:
  - Do you have any documents you want to upload?: conflicts.there_are_any
    datatype: yesnoradio
  - note: |
      **Okay**. You will have a chance to upload multiple documents. 
      You can also add additional pages to this document.
    show if: x.there_are_any  
  - Upload the first document: conflicts[0].pages
    datatype: files
    maximum image size: 1024
    image upload type: jpeg        
    accept: |
      "image/png, image/jpeg, .doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/pdf,.pdf"   
validation code: |
  if conflicts.there_are_any:
    if sum(exhibit.size_in_bytes() for exhibit in motions[0].pages) > (15 * 1024 * 1024):
      validation_error("Upload a file smaller than 15 MB.")
    try:
      pdf_concatenate(conflicts[0].pages)
    except:
      validation_error("Unable to convert this file. Please upload a new one.", field="conflicts[0].pages")
    del motions[0].pages.gathered  # docassemble sets this attribute but we want to force gathering additional pages
